
package Presentacion;

import Entidad.dtos.accountsreceivable.AccountsReceivableItem;
import Negocio.ClsCredito;
import interfaces.FrameState;
import interfaces.TableUpdatable;
import java.awt.Rectangle;

import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.BorderFactory;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import statics.Design;
import statics.Paths;
import statics.ScreenUses;
import statics.TableConfigurator;
import tools.ObjectDeserializer;
import tools.ObjectSerializer;
import tools.TextPrompt;

/**
 *
 * @author Gustavo Abasto Argote
 */
public class FrmAccountsReceivable extends javax.swing.JInternalFrame implements TableUpdatable, FrameState {

    /**
     * Creates new form FrmCuentasPorPagar
     */
    
    private DefaultTableModel defaultTableModel;
    private final String[] titles = {"ID", "CLIENTE", "EMPLEADO", "IGV", "SUBTOTAL", "T.C.", "DESCUENTO", "TOTAL", "FECHA"};
    private final int[] widths = {20, 250, 150, 40, 40, 40, 40, 40, 80};
    private ArrayList<AccountsReceivableItem> originalList;
    private final ClsCredito clsCredito;
    
    public FrmAccountsReceivable() {
        initComponents();
        readFrameRectanble();
        tableConfigurator();
        clsCredito = new ClsCredito();
        updateList();
        loadList(originalList);
        design();
        new TextPrompt("Buscar...", jTextFieldSearch);
    }
    
    private void design(){
        jPanelBackground.setBackground(Design.COLOR_PRIMARY_DARK);
        btnSalir.setBackground(Design.COLOR_ACCENT);
        btnUpdate.setBackground(Design.COLOR_ACCENT);
        btnSalir.setBorder(Design.BORDER_BUTTON);
        btnUpdate.setBorder(Design.BORDER_BUTTON);
        jPanelBackground.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
    }
    
    private void tableConfigurator(){
        defaultTableModel = new DefaultTableModel(null, titles) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTablePayable.setModel(defaultTableModel);
        for(int i= 0; i < jTablePayable.getColumnCount(); i++)
            jTablePayable.getColumnModel().getColumn(i).setPreferredWidth(widths[i]);
    }
    
    private void loadList(ArrayList<AccountsReceivableItem> list){
        while (defaultTableModel.getRowCount() > 0) {
            defaultTableModel.removeRow(0);
        }
        String fila[] = new String[9];
        for (AccountsReceivableItem item : list) {
            fila[0] = String.valueOf(item.getId());
            fila[1] = item.getClientName() + " (" + (!item.getClientDni().isEmpty()?"DNI: "+item.getClientDni():"NIT: "+item.getClientRuc()) + ")";
            fila[2] = item.getEmployeeName();
            fila[3] = String.valueOf(item.getIgv());
            fila[4] = String.valueOf(item.getSubtotal());
            fila[5] = String.valueOf(item.getTotalCredit());
            fila[6] = String.valueOf(item.getDiscount());
            fila[7] = String.valueOf(item.getTotal());
            fila[8] = item.getDate() == null ? "" : item.getDate().toString();
            defaultTableModel.addRow(fila);
        }
        for (int i = 0; i < jTablePayable.getColumnCount(); i++) {
            Hashtable<Integer, Integer> map = new Hashtable<Integer, Integer>();
            map.put(0, SwingConstants.CENTER);
            map.put(3, SwingConstants.CENTER);
            map.put(4, SwingConstants.CENTER);
            map.put(5, SwingConstants.CENTER);
            map.put(6, SwingConstants.CENTER);
            map.put(7, SwingConstants.CENTER);
            map.put(8, SwingConstants.CENTER);
            TableCellRenderer render = TableConfigurator.configureTableItem(map);
            jTablePayable.getColumnModel().getColumn(i).setCellRenderer(render);
        }
        jLabelFooter.setText("Total en lista: " + list.size());
    }
    
    private void searchItem(){
        String text = jTextFieldSearch.getText().toLowerCase();
        ArrayList<AccountsReceivableItem> auxLit = new ArrayList<>();
        for(AccountsReceivableItem item: originalList){
            if(item.plaintContent().toLowerCase().contains(text))
                auxLit.add(item);
        }
        loadList(auxLit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBackground = new javax.swing.JPanel();
        jPanelHead = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        jPanelSearch = new javax.swing.JPanel();
        jTextFieldSearch = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabelFooter = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePayable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cuentas por cobrar");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanelBackground.setBackground(new java.awt.Color(255, 255, 255));
        jPanelBackground.setLayout(new java.awt.BorderLayout(5, 5));

        jPanelHead.setBackground(new java.awt.Color(255, 204, 204));
        jPanelHead.setMaximumSize(new java.awt.Dimension(32767, 60));
        jPanelHead.setMinimumSize(new java.awt.Dimension(0, 60));
        jPanelHead.setOpaque(false);
        jPanelHead.setPreferredSize(new java.awt.Dimension(844, 60));
        jPanelHead.setLayout(new java.awt.BorderLayout());

        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/door_in.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanelHead.add(btnSalir, java.awt.BorderLayout.EAST);

        jPanelSearch.setOpaque(false);

        jTextFieldSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldSearch.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(5, 30));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(56, 30));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Refresh.png"))); // NOI18N
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanelHead.add(jPanelSearch, java.awt.BorderLayout.CENTER);

        jPanelBackground.add(jPanelHead, java.awt.BorderLayout.NORTH);

        jLabelFooter.setBackground(jPanelBackground.getBackground());
        jLabelFooter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelFooter.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFooter.setText("Total registros: ");
        jLabelFooter.setMaximumSize(new java.awt.Dimension(99, 30));
        jLabelFooter.setMinimumSize(new java.awt.Dimension(99, 30));
        jLabelFooter.setPreferredSize(new java.awt.Dimension(99, 30));
        jPanelBackground.add(jLabelFooter, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane1.setOpaque(false);

        jTablePayable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePayableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePayable);

        jPanel2.add(jScrollPane1);

        jPanelBackground.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelBackground);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        searchItem();
//        this.repaint(); // soluciona problema de deformación de componentes por transparencia en el background
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateList();
        searchItem();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTablePayableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePayableMouseClicked
        if(evt.getClickCount() == 2){
            int fila = jTablePayable.getSelectedRow();
            int creditId = Integer.parseInt((String) defaultTableModel.getValueAt(fila, 0));
            FrmManageCreditSale manageCreditSale = new FrmManageCreditSale(creditId, this);
            Presentacion.FrmPrincipal.Escritorio.add(manageCreditSale);
            manageCreditSale.toFront();
        }
    }//GEN-LAST:event_jTablePayableMouseClicked

    private void updateList(){
        originalList = clsCredito.listarCreditoPagable(true);
        ArrayList<AccountsReceivableItem> auxList = new ArrayList<>();
        auxList.addAll(originalList);
        loadList(originalList);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabelFooter;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBackground;
    private javax.swing.JPanel jPanelHead;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePayable;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateTable() {
            btnUpdate.doClick();
    }

    @Override
    public void dispose() {
        writeFrameRectangle();
        super.dispose();
    }

    @Override
    public void readFrameRectanble() {
        ObjectDeserializer<Rectangle> deserializer = new ObjectDeserializer<Rectangle>(Paths.SERIAL_DIRECTORY_DATA, Paths.RECEIVABLE_CREDITS);
        Rectangle rectangle = deserializer.deserialicer();
        if (rectangle != null)
            setBounds(rectangle);
        else{
            setLocation(
                    (ScreenUses.getHorizontal() / 2) - (getWidth() / 2),
                    (ScreenUses.getVertical() / 2) - (getHeight() / 2)
            );
        }
    }

    @Override
    public void writeFrameRectangle() {
        ObjectSerializer<Rectangle> serializer = new ObjectSerializer<>(Paths.SERIAL_DIRECTORY_DATA, Paths.RECEIVABLE_CREDITS);
        serializer.serilizer(getBounds());
    }
    
}
